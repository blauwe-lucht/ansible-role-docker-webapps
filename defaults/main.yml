---
docker_webapps:
  # name is both the name of the Docker Compose service that will be generated
  # and the name of the subdomain that the reverse proxy will listen to.
  # docker_image is the image that will be used to host the webapp.
  # It's recommended to use a tag since this role will not check for updated
  # Docker images.
  # port is the port on the container where the webapp is listening.
  # volumes are optional, they will be copied verbatim into the generated
  # docker-compose.yml.
  - name: samtris
    docker_image: blauwelucht/samtris:v2.0
    port: 8080

# Set use_lets_encrypt only to true when the Docker host can be reached from
# the internet. This is needed by Let's Encrypt to verify a certificate request.
# When use_lets_encrypt is false, a self-signed certificate will be used.
docker_webapps_use_lets_encrypt: false

# The domain name where all the subdomains are part of.
docker_webapps_domain_name: example.com

# The email address,  organization and country used to request both
# self-signed and Let's Encrypt certificates.
docker_webapps_email_address: someone@example.com
docker_webapps_organization_name: Example
docker_webapps_country_name: NL

# The project name for Docker Compose. Only needs to be overwritten when there's
# already a Docker Compose project with the same name.
docker_webapps_docker_compose_project: docker_webapps

# The name of the reverse proxy container. Only needs to be overwritten when
# there's already a container with that name.
docker_webapps_reverse_proxy_container_name: docker-webapps-reverse-proxy

# The name of the certbot container for certificate renewal. Only needs to be
# overwritten when there's already a container with that name.
docker_webapps_certbot_renew_container_name: docker-webapps-certbot-renew

# When playing around, set docker_webapps_certbot_staging_param to
# "--staging" so you won't hit the Let's Encrypt rate limits.
docker_webapps_certbot_staging_param: ""
